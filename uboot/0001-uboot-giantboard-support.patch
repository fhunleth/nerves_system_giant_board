From afcd7327396a97fea23e73b34f5fd85788dafd9f Mon Sep 17 00:00:00 2001
From: Justin Schneck <jschneck@mac.com>
Date: Wed, 3 Jun 2020 01:01:48 -0400
Subject: [PATCH] uboot giantboard support

---
 arch/arm/dts/Makefile                     |   3 +-
 arch/arm/dts/at91-sama5d27_giantboard.dts | 163 ++++++++++++++++++++++
 include/configs/sama5d27_som1_ek.h        |  90 +++++++++++-
 include/configs/sama5d27_som1_ek1.h       | 149 ++++++++++++++++++++
 4 files changed, 401 insertions(+), 4 deletions(-)
 create mode 100644 arch/arm/dts/at91-sama5d27_giantboard.dts
 create mode 100644 include/configs/sama5d27_som1_ek1.h

diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index 0127a91a..682d77d8 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -770,7 +770,8 @@ dtb-$(CONFIG_TARGET_SAMA5D2_XPLAINED) += \
 	at91-sama5d2_xplained.dtb
 
 dtb-$(CONFIG_TARGET_SAMA5D27_SOM1_EK) += \
-	at91-sama5d27_som1_ek.dtb
+	at91-sama5d27_som1_ek.dtb \
+	at91-sama5d27_giantboard.dtb
 
 dtb-$(CONFIG_TARGET_SAMA5D27_WLSOM1_EK) += \
 	at91-sama5d27_wlsom1_ek.dtb
diff --git a/arch/arm/dts/at91-sama5d27_giantboard.dts b/arch/arm/dts/at91-sama5d27_giantboard.dts
new file mode 100644
index 00000000..8ac90ccb
--- /dev/null
+++ b/arch/arm/dts/at91-sama5d27_giantboard.dts
@@ -0,0 +1,163 @@
+/*
+ * at91-sama5d27_giantboard.dts - Device Tree file for Giant Board
+ *
+ *  Copyright (C) 2017 Microchip Corporation
+ *                     Wenyou Yang <wenyou.yang@microchip.com>
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPL or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This file is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License as
+ *     published by the Free Software Foundation; either version 2 of the
+ *     License, or (at your option) any later version.
+ *
+ *     This file is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively,
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use,
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+/dts-v1/;
+#include "sama5d2.dtsi"
+#include "sama5d2-pinfunc.h"
+
+/ {
+	model = "Giant Board";
+	compatible = "atmel,sama5d27-som1-ek", "atmel,sama5d2", "atmel,sama5";
+
+	memory {
+		reg = <0x20000000 0x8000000>;
+	};
+
+	chosen {
+		u-boot,dm-pre-reloc;
+		stdout-path = &uart1;
+	};
+
+	ahb {
+		usb1: ohci@00400000 {
+			num-ports = <3>;
+			atmel,vbus-gpio = <&pioA 42 0>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb_default>;
+			status = "okay";
+		};
+
+		usb2: ehci@00500000 {
+			status = "okay";
+		};
+
+		sdmmc1: sdio-host@b0000000 {
+			bus-width = <4>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_sdmmc1_cmd_dat_default &pinctrl_sdmmc1_ck_cd_default>;
+			status = "okay"; /* conflict with qspi0 */
+			u-boot,dm-pre-reloc;
+		};
+
+		apb {
+
+			uart1: serial@f8020000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_uart1_default>;
+				status = "okay";
+				u-boot,dm-pre-reloc;
+			};
+
+			i2c0: i2c@f8028000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_i2c0_default>;
+				status = "okay";
+			};
+
+			i2c1: i2c@fc028000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_i2c1_default>;
+				status = "okay";
+
+				pmic@5b {
+					compatible = "active-semi,act8945a";
+					reg = <0x5b>;
+					active-semi,vsel-low;
+					status = "okay";
+				};
+			};
+
+			pioA: gpio@fc038000 {
+				pinctrl {
+
+					pinctrl_sdmmc1_cmd_dat_default: sdmmc1_cmd_dat_default {
+						pinmux = <PIN_PA28__SDMMC1_CMD>,
+							 <PIN_PA18__SDMMC1_DAT0>,
+							 <PIN_PA19__SDMMC1_DAT1>,
+							 <PIN_PA20__SDMMC1_DAT2>,
+							 <PIN_PA21__SDMMC1_DAT3>;
+						bias-pull-up;
+						u-boot,dm-pre-reloc;
+					};
+
+					pinctrl_sdmmc1_ck_cd_default: sdmmc1_ck_cd_default {
+						pinmux = <PIN_PA22__SDMMC1_CK>,
+							 <PIN_PA30__SDMMC1_CD>;
+						bias-disable;
+						u-boot,dm-pre-reloc;
+					};
+
+					pinctrl_uart1_default: uart1_default {
+						pinmux = <PIN_PD2__URXD1>,
+							 <PIN_PD3__UTXD1>;
+						bias-disable;
+						u-boot,dm-pre-reloc;
+					};
+
+					pinctrl_i2c0_default: i2c0_default {
+						pinmux = <PIN_PD21__TWD0>,
+							 <PIN_PD22__TWCK0>;
+						bias-disable;
+					};
+
+					pinctrl_i2c1_default: i2c1_default {
+						pinmux = <PIN_PD4__TWD1>,
+							 <PIN_PD5__TWCK1>;
+						bias-disable;
+					};
+
+					pinctrl_usb_default: usb_default {
+						pinmux = <PIN_PB10__GPIO>;
+						bias-disable;
+					};
+
+					pinctrl_usba_vbus: usba_vbus {
+						pinmux = <PIN_PA31__GPIO>;
+						bias-disable;
+					};
+				};
+			};
+		};
+	};
+};
diff --git a/include/configs/sama5d27_som1_ek.h b/include/configs/sama5d27_som1_ek.h
index 73432010..df0e7c1a 100644
--- a/include/configs/sama5d27_som1_ek.h
+++ b/include/configs/sama5d27_som1_ek.h
@@ -35,9 +35,89 @@
 #undef CONFIG_BOOTCOMMAND
 #ifdef CONFIG_SD_BOOT
 /* bootstrap + u-boot + env in sd card */
-#define CONFIG_BOOTCOMMAND	"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x21000000 at91-sama5d27_som1_ek.dtb; " \
-				"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x22000000 zImage; " \
-				"bootz 0x22000000 - 0x21000000"
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_EXTRA_ENV_SETTINGS \
+    "initrd_high=0xffffffff\0" \
+    "fdt_high=0xffffffff\0" \
+    "fdtovaddr=0x21800000\0" \
+    "loadaddr=0x22000000\0" \
+    "fdtaddr=0x21000000\0" \
+    "fdtfile=/dtbs/at91-sama5d27_giantboard.dtb\0" \
+    "enable_uboot_overlays=\0" \
+    "dtboverlay=\0" \
+    "dtboverlay1=\0" \
+    "dtboverlay2=\0" \
+    "dtboverlay3=\0" \
+    "dtboverlay4=\0" \
+    "console=ttyS0,115200\0" \
+    "optargs=\0" \
+    "video=\0" \
+    "mmcdev=0\0" \
+    "mmcpart=1\0" \
+    "mmcroot=/dev/mmcblk0p2 ro\0" \
+    "mmcrootfstype=ext4 rootwait\0" \
+    "mmcargs=setenv bootargs console=${console} " \
+        "${optargs} " \
+        "root=${mmcroot} " \
+        "rootfstype=${mmcrootfstype} " \
+        "video=${video}\0" \
+    "loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} uEnv.txt\0" \
+    "importbootenv=echo Importing environment from mmc (uEnv.txt)...; " \
+        "env import -t ${loadaddr} ${filesize}\0" \
+    "loadzimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} zImage\0" \
+    "loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdtaddr} ${fdtfile}\0" \
+    "loadoverlay=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay}\0" \
+    "loadoverlay1=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay1}\0" \
+    "loadoverlay2=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay2}\0" \
+    "loadoverlay3=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay3}\0" \
+    "loadoverlay4=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay4}\0" \
+    "mmcboot=echo Booting from mmc ...; " \
+        "run mmcargs; " \
+        "bootz ${loadaddr} - ${fdtaddr}\0"
+
+#define CONFIG_BOOTCOMMAND \
+    "mmc dev ${mmcdev};" \
+    "if mmc rescan; then " \
+        "echo SD/MMC found on device ${mmcdev};" \
+        "if run loadbootenv; then " \
+            "run importbootenv;" \
+        "fi;" \
+        "echo Running default loadzimage ...;" \
+        "if run loadzimage; then " \
+            "run loadfdt;" \
+            "echo Checking for overlays ...;" \
+            "if test -n $enable_uboot_overlays; then " \
+                "fdt addr ${fdtaddr};" \
+                "fdt resize 4096;" \
+                "if test -n $dtboverlay; then " \
+                    "run loadoverlay;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay};" \
+                "fi;" \
+                "if test -n $dtboverlay1; then " \
+                    "run loadoverlay1;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay1};" \
+                "fi;" \
+                "if test -n $dtboverlay2; then " \
+                    "run loadoverlay2;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay2};" \
+                "fi;" \
+                "if test -n $dtboverlay3; then " \
+                    "run loadoverlay3;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay3};" \
+                "fi;" \
+                "if test -n $dtboverlay4; then " \
+                    "run loadoverlay4;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay4};" \
+                "fi;" \
+            "fi;" \
+            "run mmcboot;" \
+        "fi;" \
+    "fi;"
 #endif
 
 #ifdef CONFIG_QSPI_BOOT
@@ -60,4 +140,8 @@
 #define CONFIG_SPL_FS_LOAD_PAYLOAD_NAME		"u-boot.img"
 #endif
 
+#ifdef CONFIG_QSPI_BOOT
+#define CONFIG_SYS_SPI_U_BOOT_OFFS	0x10000
+#endif
+
 #endif
diff --git a/include/configs/sama5d27_som1_ek1.h b/include/configs/sama5d27_som1_ek1.h
new file mode 100644
index 00000000..54cfb151
--- /dev/null
+++ b/include/configs/sama5d27_som1_ek1.h
@@ -0,0 +1,149 @@
+/* SPDX-License-Identifier: GPL-2.0+ */
+/*
+ * Configuration file for the SAMA5D27 SOM1 EK Board.
+ *
+ * Copyright (C) 2017 Microchip Corporation
+ *		      Wenyou Yang <wenyou.yang@microchip.com>
+ */
+
+#ifndef __CONFIG_H
+#define __CONFIG_H
+
+#include "at91-sama5_common.h"
+
+#undef CONFIG_SYS_AT91_MAIN_CLOCK
+#define CONFIG_SYS_AT91_MAIN_CLOCK      24000000 /* from 24 MHz crystal */
+
+/* SDRAM */
+#define CONFIG_SYS_SDRAM_BASE		0x20000000
+#define CONFIG_SYS_SDRAM_SIZE		0x8000000
+
+#ifdef CONFIG_SPL_BUILD
+#define CONFIG_SYS_INIT_SP_ADDR		0x218000
+#else
+#define CONFIG_SYS_INIT_SP_ADDR \
+	(CONFIG_SYS_SDRAM_BASE + 16 * 1024 - GENERATED_GBL_DATA_SIZE)
+#endif
+
+#define CONFIG_SYS_LOAD_ADDR		0x22000000 /* load address */
+
+/* NAND flash */
+#undef CONFIG_CMD_NAND
+
+/* SPI flash */
+
+#undef CONFIG_BOOTCOMMAND
+#ifdef CONFIG_SD_BOOT
+/* u-boot env in sd/mmc card */
+#define CONFIG_ENV_SIZE		0x4000
+/* bootstrap + u-boot + env in sd card */
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_EXTRA_ENV_SETTINGS \
+    "initrd_high=0xffffffff\0" \
+    "fdt_high=0xffffffff\0" \
+    "fdtovaddr=0x21800000\0" \
+    "loadaddr=0x22000000\0" \
+    "fdtaddr=0x21000000\0" \
+    "fdtfile=/dtbs/at91-sama5d27_giantboard.dtb\0" \
+    "enable_uboot_overlays=\0" \
+    "dtboverlay=\0" \
+    "dtboverlay1=\0" \
+    "dtboverlay2=\0" \
+    "dtboverlay3=\0" \
+    "dtboverlay4=\0" \
+    "console=ttyS0,115200\0" \
+    "optargs=\0" \
+    "video=\0" \
+    "mmcdev=0\0" \
+    "mmcpart=1\0" \
+    "mmcroot=/dev/mmcblk0p2 ro\0" \
+    "mmcrootfstype=ext4 rootwait\0" \
+    "mmcargs=setenv bootargs console=${console} " \
+        "${optargs} " \
+        "root=${mmcroot} " \
+        "rootfstype=${mmcrootfstype} " \
+        "video=${video}\0" \
+    "loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} uEnv.txt\0" \
+    "importbootenv=echo Importing environment from mmc (uEnv.txt)...; " \
+        "env import -t ${loadaddr} ${filesize}\0" \
+    "loadzimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} zImage\0" \
+    "loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdtaddr} ${fdtfile}\0" \
+    "loadoverlay=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay}\0" \
+    "loadoverlay1=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay1}\0" \
+    "loadoverlay2=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay2}\0" \
+    "loadoverlay3=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay3}\0" \
+    "loadoverlay4=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay4}\0" \
+    "mmcboot=echo Booting from mmc ...; " \
+        "run mmcargs; " \
+        "bootz ${loadaddr} - ${fdtaddr}\0"
+
+#define CONFIG_BOOTCOMMAND \
+    "mmc dev ${mmcdev};" \
+    "if mmc rescan; then " \
+        "echo SD/MMC found on device ${mmcdev};" \
+        "if run loadbootenv; then " \
+            "run importbootenv;" \
+        "fi;" \
+        "echo Running default loadzimage ...;" \
+        "if run loadzimage; then " \
+            "run loadfdt;" \
+            "echo Checking for overlays ...;" \
+            "if test -n $enable_uboot_overlays; then " \
+                "fdt addr ${fdtaddr};" \
+                "fdt resize 4096;" \
+                "if test -n $dtboverlay; then " \
+                    "run loadoverlay;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay};" \
+                "fi;" \
+                "if test -n $dtboverlay1; then " \
+                    "run loadoverlay1;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay1};" \
+                "fi;" \
+                "if test -n $dtboverlay2; then " \
+                    "run loadoverlay2;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay2};" \
+                "fi;" \
+                "if test -n $dtboverlay3; then " \
+                    "run loadoverlay3;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay3};" \
+                "fi;" \
+                "if test -n $dtboverlay4; then " \
+                    "run loadoverlay4;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay4};" \
+                "fi;" \
+            "fi;" \
+            "run mmcboot;" \
+        "fi;" \
+    "fi;"
+#endif
+
+#ifdef CONFIG_QSPI_BOOT
+#undef CONFIG_BOOTARGS
+#define CONFIG_BOOTARGS \
+	"console=ttyS0,115200 earlyprintk root=/dev/mmcblk0p2 rw rootwait"
+#endif
+
+/* SPL */
+#define CONFIG_SPL_MAX_SIZE		0x10000
+#define CONFIG_SPL_BSS_START_ADDR	0x20000000
+#define CONFIG_SPL_BSS_MAX_SIZE		0x80000
+#define CONFIG_SYS_SPL_MALLOC_START	0x20080000
+#define CONFIG_SYS_SPL_MALLOC_SIZE	0x80000
+
+#define CONFIG_SYS_MONITOR_LEN		(512 << 10)
+
+#ifdef CONFIG_SD_BOOT
+#define CONFIG_SYS_MMCSD_FS_BOOT_PARTITION	1
+#define CONFIG_SPL_FS_LOAD_PAYLOAD_NAME		"u-boot.img"
+#endif
+
+#ifdef CONFIG_QSPI_BOOT
+#define CONFIG_SYS_SPI_U_BOOT_OFFS	0x10000
+#endif
+
+#endif
-- 
2.25.1

